/*
 * Click nbfs://nbhost/SystemFileSystem/Templates/Licenses/license-default.txt to change this license
 * Click nbfs://nbhost/SystemFileSystem/Templates/GUIForms/JFrame.java to edit this template
 */
package userInterface;

import java.awt.Color;
import java.awt.Font;
import java.awt.Graphics;
import java.awt.Graphics2D;
import java.awt.event.KeyEvent;
import java.awt.print.PageFormat;
import static java.awt.print.Printable.NO_SUCH_PAGE;
import static java.awt.print.Printable.PAGE_EXISTS;
import java.awt.print.PrinterException;
import java.awt.print.PrinterJob;
import java.util.logging.Level;
import java.util.logging.Logger;
import logic.MorseCodeTranslator;

/**
 *
 * @author MARQUEZ
 */
public class JFMorseCodeTranslator extends javax.swing.JFrame {

    private MorseCodeTranslator translator = new MorseCodeTranslator();

    /**
     * Creates new form JFTranslator
     */
    public JFMorseCodeTranslator() {
        initComponents();
        this.setLocationRelativeTo(null);
        setInfo();
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        pNav = new javax.swing.JPanel();
        bExport = new javax.swing.JButton();
        bPrint = new javax.swing.JButton();
        pTitle = new javax.swing.JPanel();
        lInfo = new javax.swing.JLabel();
        pEnglish = new javax.swing.JPanel();
        lTitleEnglish = new javax.swing.JLabel();
        jScrollPane1 = new javax.swing.JScrollPane();
        tAEnglish = new javax.swing.JTextArea();
        pMorse = new javax.swing.JPanel();
        lTitleMorse = new javax.swing.JLabel();
        jScrollPane2 = new javax.swing.JScrollPane();
        tAMorse = new javax.swing.JTextArea();
        bClearTextEnglish = new javax.swing.JButton();
        bClearTextMorse = new javax.swing.JButton();
        bTranslateToMorse = new javax.swing.JButton();
        bTranslateToEnglish = new javax.swing.JButton();

        setDefaultCloseOperation(javax.swing.WindowConstants.EXIT_ON_CLOSE);
        setTitle("Morse Translator by Group#3");

        bExport.setText("Export");
        bExport.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                bExportActionPerformed(evt);
            }
        });

        bPrint.setText("Print");
        bPrint.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                bPrintActionPerformed(evt);
            }
        });

        javax.swing.GroupLayout pNavLayout = new javax.swing.GroupLayout(pNav);
        pNav.setLayout(pNavLayout);
        pNavLayout.setHorizontalGroup(
            pNavLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(pNavLayout.createSequentialGroup()
                .addComponent(bExport, javax.swing.GroupLayout.PREFERRED_SIZE, 84, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(bPrint, javax.swing.GroupLayout.PREFERRED_SIZE, 81, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(0, 0, Short.MAX_VALUE))
        );
        pNavLayout.setVerticalGroup(
            pNavLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, pNavLayout.createSequentialGroup()
                .addGap(0, 0, Short.MAX_VALUE)
                .addGroup(pNavLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING, false)
                    .addComponent(bPrint, javax.swing.GroupLayout.PREFERRED_SIZE, 17, Short.MAX_VALUE)
                    .addComponent(bExport, javax.swing.GroupLayout.PREFERRED_SIZE, 0, Short.MAX_VALUE))
                .addContainerGap())
        );

        javax.swing.GroupLayout pTitleLayout = new javax.swing.GroupLayout(pTitle);
        pTitle.setLayout(pTitleLayout);
        pTitleLayout.setHorizontalGroup(
            pTitleLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(pTitleLayout.createSequentialGroup()
                .addContainerGap()
                .addComponent(lInfo, javax.swing.GroupLayout.PREFERRED_SIZE, 439, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
        );
        pTitleLayout.setVerticalGroup(
            pTitleLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(pTitleLayout.createSequentialGroup()
                .addContainerGap()
                .addComponent(lInfo, javax.swing.GroupLayout.DEFAULT_SIZE, 65, Short.MAX_VALUE)
                .addContainerGap())
        );

        lTitleEnglish.setFont(new java.awt.Font("Segoe UI", 0, 14)); // NOI18N
        lTitleEnglish.setText("English");

        tAEnglish.setColumns(20);
        tAEnglish.setFont(new java.awt.Font("Segoe UI", 0, 14)); // NOI18N
        tAEnglish.setLineWrap(true);
        tAEnglish.setRows(5);
        tAEnglish.setWrapStyleWord(true);
        tAEnglish.addKeyListener(new java.awt.event.KeyAdapter() {
            public void keyTyped(java.awt.event.KeyEvent evt) {
                tAEnglishKeyTyped(evt);
            }
        });
        jScrollPane1.setViewportView(tAEnglish);

        javax.swing.GroupLayout pEnglishLayout = new javax.swing.GroupLayout(pEnglish);
        pEnglish.setLayout(pEnglishLayout);
        pEnglishLayout.setHorizontalGroup(
            pEnglishLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(pEnglishLayout.createSequentialGroup()
                .addGap(153, 153, 153)
                .addComponent(lTitleEnglish)
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
            .addGroup(pEnglishLayout.createSequentialGroup()
                .addContainerGap()
                .addComponent(jScrollPane1, javax.swing.GroupLayout.DEFAULT_SIZE, 350, Short.MAX_VALUE)
                .addContainerGap())
        );
        pEnglishLayout.setVerticalGroup(
            pEnglishLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(pEnglishLayout.createSequentialGroup()
                .addContainerGap()
                .addComponent(lTitleEnglish)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addComponent(jScrollPane1)
                .addContainerGap())
        );

        lTitleMorse.setFont(new java.awt.Font("Segoe UI", 0, 14)); // NOI18N
        lTitleMorse.setText("Morse");

        tAMorse.setColumns(20);
        tAMorse.setFont(new java.awt.Font("Segoe UI", 0, 14)); // NOI18N
        tAMorse.setLineWrap(true);
        tAMorse.setRows(5);
        tAMorse.setWrapStyleWord(true);
        tAMorse.addKeyListener(new java.awt.event.KeyAdapter() {
            public void keyTyped(java.awt.event.KeyEvent evt) {
                tAMorseKeyTyped(evt);
            }
        });
        jScrollPane2.setViewportView(tAMorse);

        javax.swing.GroupLayout pMorseLayout = new javax.swing.GroupLayout(pMorse);
        pMorse.setLayout(pMorseLayout);
        pMorseLayout.setHorizontalGroup(
            pMorseLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, pMorseLayout.createSequentialGroup()
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                .addComponent(lTitleMorse)
                .addGap(155, 155, 155))
            .addGroup(pMorseLayout.createSequentialGroup()
                .addContainerGap()
                .addComponent(jScrollPane2, javax.swing.GroupLayout.DEFAULT_SIZE, 350, Short.MAX_VALUE)
                .addContainerGap())
        );
        pMorseLayout.setVerticalGroup(
            pMorseLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(pMorseLayout.createSequentialGroup()
                .addContainerGap()
                .addComponent(lTitleMorse)
                .addGap(12, 12, 12)
                .addComponent(jScrollPane2, javax.swing.GroupLayout.DEFAULT_SIZE, 350, Short.MAX_VALUE)
                .addContainerGap())
        );

        bClearTextEnglish.setText("Clear Text");
        bClearTextEnglish.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                bClearTextEnglishActionPerformed(evt);
            }
        });

        bClearTextMorse.setText("Clear Text");
        bClearTextMorse.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                bClearTextMorseActionPerformed(evt);
            }
        });

        bTranslateToMorse.setText("English >>>> Morse");
        bTranslateToMorse.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                bTranslateToMorseActionPerformed(evt);
            }
        });

        bTranslateToEnglish.setText("Morse >>>> English");
        bTranslateToEnglish.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                bTranslateToEnglishActionPerformed(evt);
            }
        });

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(pNav, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
            .addComponent(pTitle, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
            .addGroup(layout.createSequentialGroup()
                .addComponent(pEnglish, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(18, 18, Short.MAX_VALUE)
                .addComponent(pMorse, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
            .addGroup(layout.createSequentialGroup()
                .addContainerGap()
                .addComponent(bClearTextEnglish)
                .addGap(18, 18, 18)
                .addComponent(bTranslateToMorse)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                .addComponent(bTranslateToEnglish)
                .addGap(18, 18, 18)
                .addComponent(bClearTextMorse)
                .addContainerGap())
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addComponent(pNav, javax.swing.GroupLayout.PREFERRED_SIZE, 17, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(pTitle, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                    .addComponent(pEnglish, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                    .addComponent(pMorse, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
                .addGap(18, 18, 18)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(bClearTextEnglish)
                    .addComponent(bClearTextMorse)
                    .addComponent(bTranslateToMorse)
                    .addComponent(bTranslateToEnglish))
                .addContainerGap(9, Short.MAX_VALUE))
        );

        pack();
    }// </editor-fold>//GEN-END:initComponents

    private void bClearTextEnglishActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_bClearTextEnglishActionPerformed
        tAEnglish.setText(null);
    }//GEN-LAST:event_bClearTextEnglishActionPerformed

    private void bClearTextMorseActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_bClearTextMorseActionPerformed
        tAMorse.setText(null);
    }//GEN-LAST:event_bClearTextMorseActionPerformed

    private void bTranslateToMorseActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_bTranslateToMorseActionPerformed
        String english = tAEnglish.getText().trim();
        tAMorse.setText(translator.englishWordToMorseWord(english));
    }//GEN-LAST:event_bTranslateToMorseActionPerformed

    private void bTranslateToEnglishActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_bTranslateToEnglishActionPerformed
        String morse = tAMorse.getText().trim();
        tAEnglish.setText(translator.morseWordToEnglishWord(morse));
    }//GEN-LAST:event_bTranslateToEnglishActionPerformed

    private void tAEnglishKeyTyped(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_tAEnglishKeyTyped
        //when space bar is pressed (or back space) do the conversion
        if (Character.isWhitespace(evt.getKeyChar()) || evt.getKeyCode() == KeyEvent.VK_BACK_SPACE) {
            String english = tAEnglish.getText().trim();
            tAMorse.setText(translator.englishWordToMorseWord(english));
        }
    }//GEN-LAST:event_tAEnglishKeyTyped

    private void tAMorseKeyTyped(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_tAMorseKeyTyped
        //when space bar is pressed (or back space) do the conversion
        if (Character.isWhitespace(evt.getKeyChar()) || evt.getKeyCode() == KeyEvent.VK_BACK_SPACE) {
            String morse = tAMorse.getText().trim();
            tAEnglish.setText(translator.morseWordToEnglishWord(morse));
        }
    }//GEN-LAST:event_tAMorseKeyTyped

    private void bPrintActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_bPrintActionPerformed
        try {
            printText(tAMorse.getText());
        } catch (PrinterException ex) {
            Logger.getLogger(JFMorseCodeTranslator.class.getName()).log(Level.SEVERE, null, ex);
        }
    }//GEN-LAST:event_bPrintActionPerformed

    private void bExportActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_bExportActionPerformed

        String text = tAMorse.getText();
        
        JFExport exportFrame = new JFExport(text); // Crear una instancia de JFExport
        exportFrame.setVisible(true); // Hacer visible la ventana de exportació
    }//GEN-LAST:event_bExportActionPerformed


    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JButton bClearTextEnglish;
    private javax.swing.JButton bClearTextMorse;
    private javax.swing.JButton bExport;
    private javax.swing.JButton bPrint;
    private javax.swing.JButton bTranslateToEnglish;
    private javax.swing.JButton bTranslateToMorse;
    private javax.swing.JScrollPane jScrollPane1;
    private javax.swing.JScrollPane jScrollPane2;
    private javax.swing.JLabel lInfo;
    private javax.swing.JLabel lTitleEnglish;
    private javax.swing.JLabel lTitleMorse;
    private javax.swing.JPanel pEnglish;
    private javax.swing.JPanel pMorse;
    private javax.swing.JPanel pNav;
    private javax.swing.JPanel pTitle;
    private javax.swing.JTextArea tAEnglish;
    private javax.swing.JTextArea tAMorse;
    // End of variables declaration//GEN-END:variables

    private void setInfo() {
        lInfo.setText("<html>Morse Translator<br>"
                + "Note: <br>"
                + "Morse code words are separated by / <br>"
                + "Morse code alphabets are separated by single whitespace <br>"
                + "Press space bar for auto translation</html>");
    }

    public void printText(String content) throws PrinterException {
        PrinterJob job = PrinterJob.getPrinterJob();
        job.setPrintable((Graphics graphics, PageFormat pageFormat, int pageIndex) -> {
            if (pageIndex > 0) {
                return NO_SUCH_PAGE;
            }
            Graphics2D g2d = (Graphics2D) graphics;
            g2d.translate(pageFormat.getImageableX(), pageFormat.getImageableY());
            g2d.setFont(new Font("SansSerif", Font.PLAIN, 32));
            g2d.setColor(Color.BLACK);
            int lineHeight = g2d.getFontMetrics().getHeight();
            int y1 = 0;
            int margin = 50;
            for (String line : content.split("\n")) {
                String[] words = line.split(" ");
                String currentLine = words[0];
                for (int i = 1; i < words.length; i++) {
                    if (g2d.getFontMetrics().stringWidth(currentLine + " " + words[i]) < pageFormat.getImageableWidth() - 2 * margin) {
                        currentLine += " " + words[i];
                    } else {
                        y1 += lineHeight;
                        g2d.drawString(currentLine, margin, y1);
                        currentLine = words[i];
                    }
                }
                y1 += lineHeight;
                g2d.drawString(currentLine, margin, y1);
            }
            return PAGE_EXISTS;
        });

        // Mostrar el cuadro de diálogo de impresión
        if (job.printDialog()) {
            job.print();
        }
    }
}
